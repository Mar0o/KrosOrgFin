// <auto-generated />
using System;
using KrosOrg.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace KrosOrg.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("KrosOrg.Hierarchia.Company", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<int?>("CEOID")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CEOID");

                    b.ToTable("Companies");
                });

            modelBuilder.Entity("KrosOrg.Hierarchia.Department", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<int?>("DepartmentLeaderId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProjectId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentLeaderId");

                    b.HasIndex("ProjectId");

                    b.ToTable("Departments");
                });

            modelBuilder.Entity("KrosOrg.Hierarchia.Division", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<int?>("DivisionLeaderId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.HasIndex("DivisionLeaderId");

                    b.ToTable("Divisions");
                });

            modelBuilder.Entity("KrosOrg.Hierarchia.Employee", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("BirthNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("KrosOrg.Hierarchia.Project", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<int>("DivisionId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ProjectLeaderId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DivisionId");

                    b.HasIndex("ProjectLeaderId");

                    b.ToTable("Projects");
                });

            modelBuilder.Entity("KrosOrg.Hierarchia.Company", b =>
                {
                    b.HasOne("KrosOrg.Hierarchia.Employee", "CEO")
                        .WithMany()
                        .HasForeignKey("CEOID")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("CEO");
                });

            modelBuilder.Entity("KrosOrg.Hierarchia.Department", b =>
                {
                    b.HasOne("KrosOrg.Hierarchia.Employee", "DepartmentLeader")
                        .WithMany()
                        .HasForeignKey("DepartmentLeaderId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("KrosOrg.Hierarchia.Project", "Project")
                        .WithMany("Departments")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DepartmentLeader");

                    b.Navigation("Project");
                });

            modelBuilder.Entity("KrosOrg.Hierarchia.Division", b =>
                {
                    b.HasOne("KrosOrg.Hierarchia.Company", "Company")
                        .WithMany("Divisions")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("KrosOrg.Hierarchia.Employee", "DivisionLeader")
                        .WithMany()
                        .HasForeignKey("DivisionLeaderId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Company");

                    b.Navigation("DivisionLeader");
                });

            modelBuilder.Entity("KrosOrg.Hierarchia.Employee", b =>
                {
                    b.HasOne("KrosOrg.Hierarchia.Department", null)
                        .WithMany("Employees")
                        .HasForeignKey("DepartmentId");
                });

            modelBuilder.Entity("KrosOrg.Hierarchia.Project", b =>
                {
                    b.HasOne("KrosOrg.Hierarchia.Division", "Division")
                        .WithMany("Projects")
                        .HasForeignKey("DivisionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("KrosOrg.Hierarchia.Employee", "ProjectLeader")
                        .WithMany()
                        .HasForeignKey("ProjectLeaderId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Division");

                    b.Navigation("ProjectLeader");
                });

            modelBuilder.Entity("KrosOrg.Hierarchia.Company", b =>
                {
                    b.Navigation("Divisions");
                });

            modelBuilder.Entity("KrosOrg.Hierarchia.Department", b =>
                {
                    b.Navigation("Employees");
                });

            modelBuilder.Entity("KrosOrg.Hierarchia.Division", b =>
                {
                    b.Navigation("Projects");
                });

            modelBuilder.Entity("KrosOrg.Hierarchia.Project", b =>
                {
                    b.Navigation("Departments");
                });
#pragma warning restore 612, 618
        }
    }
}
